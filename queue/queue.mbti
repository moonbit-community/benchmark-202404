package moonbitlang/core/queue

// Values

// Types and methods
type Queue
fn Queue::clear[T](Queue[T]) -> Unit
fn Queue::copy[T](Queue[T]) -> Queue[T]
fn Queue::debug_write[T : Show](Queue[T], Buffer) -> Unit
fn Queue::fold[T](Queue[T], T, (T, T) -> T) -> T
fn Queue::from_array[T](Array[T]) -> Queue[T]
fn Queue::is_empty[T](Queue[T]) -> Bool
fn Queue::iter[T](Queue[T], (T) -> Unit) -> Unit
fn Queue::iteri[T](Queue[T], (Int, T) -> Unit) -> Unit
fn Queue::length[T](Queue[T]) -> Int
fn Queue::new[T]() -> Queue[T]
fn Queue::peek[T](Queue[T]) -> Option[T]
fn Queue::peek_exn[T](Queue[T]) -> T
fn Queue::pop[T](Queue[T]) -> Option[T]
fn Queue::pop_exn[T](Queue[T]) -> T
fn Queue::push[T](Queue[T], T) -> Unit
fn Queue::to_string[T : Show](Queue[T]) -> String
fn Queue::transfer[T](Queue[T], Queue[T]) -> Unit

// Traits

// Extension Methods

